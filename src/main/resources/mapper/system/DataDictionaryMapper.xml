<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sujianan.dao.system.DataDictionaryMapper">
	<resultMap id="BaseResultMap"
		type="com.sujianan.bean.system.DataDictionary">
		<id column="ID" jdbcType="DECIMAL" property="id" />
		<result column="PID" jdbcType="DECIMAL" property="pid" />
		<result column="DATA_CODE" jdbcType="VARCHAR"
			property="dataCode" />
		<result column="DATA_NAME" jdbcType="VARCHAR"
			property="dataName" />
		<result column="DATA_LEVEL" jdbcType="DECIMAL"
			property="dataLevel" />
		<result column="CREATE_USER" jdbcType="VARCHAR"
			property="createUser" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="UPDATE_USER" jdbcType="VARCHAR"
			property="updateUser" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, PID, DATA_CODE, DATA_NAME, DATA_LEVEL, CREATE_USER, CREATE_TIME,
		UPDATE_USER,
		UPDATE_TIME
	</sql>
	<select id="selectByExample"
		parameterType="com.sujianan.bean.system.DataDictionaryExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from T_DATA_DICTIONARY
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_DATA_DICTIONARY
		where ID = #{id,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from T_DATA_DICTIONARY
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.sujianan.bean.system.DataDictionaryExample">
		delete from T_DATA_DICTIONARY
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.sujianan.bean.system.DataDictionary">
		insert into T_DATA_DICTIONARY (ID, PID, DATA_CODE,
		DATA_NAME, DATA_LEVEL, CREATE_USER,
		CREATE_TIME, UPDATE_USER, UPDATE_TIME
		)
		values (#{id,jdbcType=DECIMAL}, #{pid,jdbcType=DECIMAL},
		#{dataCode,jdbcType=VARCHAR},
		#{dataName,jdbcType=VARCHAR}, #{dataLevel,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.sujianan.bean.system.DataDictionary">
		insert into T_DATA_DICTIONARY
		<trim prefix="(" suffix=")" suffixOverrides=",">
				ID,
				PID,
			<if test="dataCode != null">
				DATA_CODE,
			</if>
			<if test="dataName != null">
				DATA_NAME,
			</if>
			<if test="dataLevel != null">
				DATA_LEVEL,
			</if>
			<if test="createUser != null">
				CREATE_USER,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="updateUser != null">
				UPDATE_USER,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
				sequence_t_data_dictionary_id.nextval,
				#{pid,jdbcType=DECIMAL},
			<if test="dataCode != null">
				#{dataCode,jdbcType=VARCHAR},
			</if>
			<if test="dataName != null">
				#{dataName,jdbcType=VARCHAR},
			</if>
			<if test="dataLevel != null">
				#{dataLevel,jdbcType=DECIMAL},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.sujianan.bean.system.DataDictionaryExample"
		resultType="java.lang.Long">
		select count(*) from T_DATA_DICTIONARY
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update T_DATA_DICTIONARY
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=DECIMAL},
			</if>
			<if test="record.pid != null">
				PID = #{record.pid,jdbcType=DECIMAL},
			</if>
			<if test="record.dataCode != null">
				DATA_CODE = #{record.dataCode,jdbcType=VARCHAR},
			</if>
			<if test="record.dataName != null">
				DATA_NAME = #{record.dataName,jdbcType=VARCHAR},
			</if>
			<if test="record.dataLevel != null">
				DATA_LEVEL = #{record.dataLevel,jdbcType=DECIMAL},
			</if>
			<if test="record.createUser != null">
				CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateUser != null">
				UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
			</if>
			<if test="record.updateTime != null">
				UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update T_DATA_DICTIONARY
		set ID = #{record.id,jdbcType=DECIMAL},
		PID = #{record.pid,jdbcType=DECIMAL},
		DATA_CODE = #{record.dataCode,jdbcType=VARCHAR},
		DATA_NAME = #{record.dataName,jdbcType=VARCHAR},
		DATA_LEVEL = #{record.dataLevel,jdbcType=DECIMAL},
		CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
		CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
		UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
		UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.sujianan.bean.system.DataDictionary">
		update T_DATA_DICTIONARY
		<set>
			<if test="pid != null">
				PID = #{pid,jdbcType=DECIMAL},
			</if>
			<if test="dataCode != null">
				DATA_CODE = #{dataCode,jdbcType=VARCHAR},
			</if>
			<if test="dataName != null">
				DATA_NAME = #{dataName,jdbcType=VARCHAR},
			</if>
			<if test="dataLevel != null">
				DATA_LEVEL = #{dataLevel,jdbcType=DECIMAL},
			</if>
			<if test="createUser != null">
				CREATE_USER = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.sujianan.bean.system.DataDictionary">
		update T_DATA_DICTIONARY
		set PID = #{pid,jdbcType=DECIMAL},
		DATA_CODE = #{dataCode,jdbcType=VARCHAR},
		DATA_NAME = #{dataName,jdbcType=VARCHAR},
		DATA_LEVEL = #{dataLevel,jdbcType=DECIMAL},
		CREATE_USER = #{createUser,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=DECIMAL}
	</update>

	<!-- 查询所有
	pid为code为str的一条字典数据 查询pid为参数str的id下所有的数据字典数据 -->
	<select id="selectByCode" resultType="com.sujianan.bean.system.DataDictionary" parameterType="java.lang.String">
		select 
		<include refid="Base_Column_List" />
		from t_data_dictionary tdd1 
		where tdd1.pid = (	
			select tdd.id 
			from t_data_dictionary tdd 
			where tdd.data_code = #{code}
		)
	</select>
	
	<!-- 查询博客具体类别,data_level=3的code,name -->
	<select id="selectBlogDataLevel3CodeName" resultType="com.sujianan.bean.system.DataDictionary">
		select 
			data_code , data_name 
		from t_data_dictionary 
    	where 1=1 
    		and data_level = 3 
    		and pid IN ( select id from t_data_dictionary where pid = ( select id from t_data_dictionary where data_code = 'blog_type' ) )
	</select>

	<!-- 递归数据字典表,start with 根id为1 -->
	<select id="selectDataTreeByStartWithConnect" resultType="com.sujianan.bean.system.DataDictionary">
		select 
		<include refid="Base_Column_List"></include>
		from t_data_dictionary 
		start with id = 1 
		connect by prior id = pid 
	</select>

	<!-- 根据id查询对应的一条数据字典数据 -->
	<select id="findDataById" parameterType="java.lang.Integer" resultType="com.sujianan.bean.system.DataDictionary">
		select 
		<include refid="Base_Column_List"></include>
		from t_data_dictionary 
		where id = #{id, jdbcType=INTEGER}
	</select>

	<!-- 根据pid查询数据 -->
	<select id="selectByPid" resultType="com.sujianan.bean.system.DataDictionary" parameterType="java.lang.Integer">
		select  
		<include refid="Base_Column_List"></include>
		from t_data_dictionary 
		where pid = #{pid, jdbcType=INTEGER} 
	</select>
	<!-- 递归查询上级数据字典,看是否包含 data_code = "blog_type"类型的数据字典数据 -->
	<select id="findUperDataDictionary" resultType="com.sujianan.bean.system.DataDictionary" parameterType="java.lang.String">
		select tdd.ID, tdd.PID, tdd.DATA_CODE, tdd.DATA_NAME, tdd.DATA_LEVEL from T_DATA_DICTIONARY tdd where 1=1 
		start with tdd.data_code = #{code}
		connect by prior tdd.pid = tdd.id
	</select>
	
</mapper>